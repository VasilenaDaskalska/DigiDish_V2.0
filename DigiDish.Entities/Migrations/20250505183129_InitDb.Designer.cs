// <auto-generated />
using System;
using DigiDish.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigiDish.Entities.Migrations
{
    [DbContext(typeof(DigiDishDbContext))]
    [Migration("20250505183129_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DigiDish.Entities.AuditTriailEntities.AuditLog", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("LastUserModifiedID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserCreatorID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("LastUserModifiedID");

                    b.HasIndex("UserCreatorID");

                    b.ToTable("log_audit_logs");
                });

            modelBuilder.Entity("DigiDish.Entities.AuditTriailEntities.UserLog", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("AuditLogID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastPasswordModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("LastUserModifiedID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfilePhoto")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long>("UserCreatorID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AuditLogID");

                    b.HasIndex("LastUserModifiedID");

                    b.HasIndex("UserCreatorID");

                    b.HasIndex("UserID");

                    b.ToTable("UserLogs");
                });

            modelBuilder.Entity("DigiDish.Entities.User", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastPasswordModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("LastUserModifiedID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfilePhoto")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long>("UserCreatorID")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LastUserModifiedID");

                    b.HasIndex("UserCreatorID");

                    b.ToTable("users");
                });

            modelBuilder.Entity("DigiDish.Entities.AuditTriailEntities.AuditLog", b =>
                {
                    b.HasOne("DigiDish.Entities.User", "LastUserModified")
                        .WithMany()
                        .HasForeignKey("LastUserModifiedID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DigiDish.Entities.User", "UserCreator")
                        .WithMany()
                        .HasForeignKey("UserCreatorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LastUserModified");

                    b.Navigation("UserCreator");
                });

            modelBuilder.Entity("DigiDish.Entities.AuditTriailEntities.UserLog", b =>
                {
                    b.HasOne("DigiDish.Entities.AuditTriailEntities.AuditLog", "AuditLog")
                        .WithMany()
                        .HasForeignKey("AuditLogID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DigiDish.Entities.User", "LastUserModified")
                        .WithMany()
                        .HasForeignKey("LastUserModifiedID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DigiDish.Entities.User", "UserCreator")
                        .WithMany()
                        .HasForeignKey("UserCreatorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DigiDish.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AuditLog");

                    b.Navigation("LastUserModified");

                    b.Navigation("User");

                    b.Navigation("UserCreator");
                });

            modelBuilder.Entity("DigiDish.Entities.User", b =>
                {
                    b.HasOne("DigiDish.Entities.User", "LastUserModified")
                        .WithMany()
                        .HasForeignKey("LastUserModifiedID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DigiDish.Entities.User", "UserCreator")
                        .WithMany()
                        .HasForeignKey("UserCreatorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LastUserModified");

                    b.Navigation("UserCreator");
                });
#pragma warning restore 612, 618
        }
    }
}
